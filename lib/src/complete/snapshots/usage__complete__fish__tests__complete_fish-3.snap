---
source: lib/src/complete/fish.rs
expression: "complete_fish(&CompleteOptions\n{\n    usage_bin: \"usage\".to_string(), shell: \"fish\".to_string(), bin:\n    \"mycli\".to_string(), cache_key: None, spec:\n    Some(SPEC_KITCHEN_SINK.clone()), usage_cmd: None,\n    include_bash_completion_lib: false,\n})"
snapshot_kind: text
---
# if "usage" is not installed show an error
if ! command -v usage &> /dev/null
    echo >&2
    echo "Error: usage CLI not found. This is required for completions to work in mycli." >&2
    echo "See https://usage.jdx.dev for more information." >&2
    return 1
end

set _usage_spec_mycli 'name "mycli"
bin "mycli"
source_code_link_template "https://github.com/jdx/mise/blob/main/src/cli/{{path}}.rs"
flag "--flag1" help="flag1 description"
flag "--flag2" help="flag2 description" {
    long_help "flag2 long description\n\nincludes a code block:\n\n    $ echo hello world\n    hello world\n\n    more code\n\nExamples:\n\n    # run with no arguments to use the interactive selector\n    $ mise use\n\n    # set the current version of node to 20.x in mise.toml of current directory\n    # will write the fuzzy version (e.g.: 20)\n\nsome docs\n\n    $ echo hello world\n    hello world\n"
}
flag "--flag3" help="flag3 description" negate="--no-flag3"
flag "--with-default"
flag "--shell" {
    arg "<shell>" {
        choices "bash" "zsh" "fish"
    }
}
arg "<arg1>" help="arg1 description"
arg "[arg2]" help="arg2 description" required=false default="default value" {
    choices "choice1" "choice2" "choice3"
}
arg "<arg3>" help="arg3 description" help_long="arg3 long description"
arg "<argrest>..." var=true
arg "[with-default]" required=false default="default value"
complete "plugin" run="echo \"plugin-1\nplugin-2\nplugin-3\""
cmd "plugin" {
    cmd "install" {
        long_help r"install a plugin"
        flag "-g --global" global=true
        flag "-d --dir" {
            arg "<dir>"
        }
        flag "-f --force" negate="--no-force"
        arg "<plugin>"
        arg "<version>"
    }
}
'
set -l tokens
if commandline -x >/dev/null 2>&1
    complete -xc mycli -a '(usage complete-word --shell fish -s "$_usage_spec_mycli" -- (commandline -xpc) (commandline -t))'
else
    complete -xc mycli -a '(usage complete-word --shell fish -s "$_usage_spec_mycli" -- (commandline -opc) (commandline -t))'
end
