---
source: lib/src/complete/zsh.rs
expression: "complete_zsh(&CompleteOptions\n{\n    shell: \"zsh\".to_string(), bin: \"mycli\".to_string(), cache_key: None, spec:\n    Some(SPEC_KITCHEN_SINK.clone()), usage_cmd: None,\n})"
snapshot_kind: text
---
#compdef mycli
local curcontext="$curcontext"

_mycli() {
  typeset -A opt_args
  local curcontext="$curcontext" spec cache_policy

  if ! command -v usage &> /dev/null; then
      echo >&2
      echo "Error: usage CLI not found. This is required for completions to work in mycli." >&2
      echo "See https://usage.jdx.dev for more information." >&2
      return 1
  fi
read -r -d '' spec <<'__USAGE_EOF__'
name "mycli"
bin "mycli"
source_code_link_template "https://github.com/jdx/mise/blob/main/src/cli/{{path}}.rs"
flag "--flag1" help="flag1 description"
flag "--flag2" help="flag2 description" {
    long_help "flag2 long description"
}
flag "--flag3" help="flag3 description" negate="--no-flag3"
flag "--shell" {
    arg "<shell>" {
        choices "bash" "zsh" "fish"
    }
}
arg "<arg1>" help="arg1 description"
arg "<arg2>" help="arg2 description" default="default value" {
    choices "choice1" "choice2" "choice3"
}
arg "<arg3>" help="arg3 description" help_long="arg3 long description"
arg "<argrest>..." var=true
cmd "plugin" {
    cmd "install" {
        flag "-g --global"
        flag "-d --dir" {
            arg "<dir>"
        }
        flag "-f --force" negate="--no-force"
        arg "<plugin>"
        arg "<version>"
    }
}
__USAGE_EOF__

  _arguments "*: :(($(usage complete-word --shell zsh -s "$spec" -- "${words[@]}" )))"
  return 0
}

if [ "$funcstack[1]" = "_mycli" ]; then
    _mycli "$@"
else
    compdef _mycli mycli
fi

# vim: noet ci pi sts=0 sw=4 ts=4
